{"version":3,"sources":["Header/Header.js","Jobs/Jobs.js","TextField/TextField.js","Dashboard/Dashboard.js","Queue/sort.js","Queue/Queue.js","Todo/Todo.js","App.js","index.js"],"names":["Header","props","className","type","id","value","onChange","handleChange","htmlFor","Jobs","title","queue","queues","map","item","index","job","date","join","onClick","removeHandler","TextField","label","min","max","inputKey","clsName","Dashboard","onSubmit","handleSubmit","stableSort","arr","n","i","len","length","key","j","radix","result","list","Queue","useState","setQueues","current","setCurrent","e","target","parentElement","firstChild","textContent","newState","idx","findIndex","slice","concat","Object","assign","dataset","console","log","preventDefault","defaultCase","Todo","parentNode","App","setQueue","checked","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a57e027.chunk.js","sourcesContent":["import \"./Header.scss\";\n\nconst Header = (props) => {\n\n  return (\n    <header>\n      <div className=\"title\">\n        <h3 className=\"title__head\">Queue / Todo</h3>\n        <p className=\"titile__desc\">mange your jobs in oredered / unordered list</p>\n      </div>\n      <div className=\"mode\">\n        <p className=\"mode__option\">Queue</p>\n        <input type=\"checkbox\" className=\"mode__checkbox\" id=\"switch\" value={props.value} onChange={props.handleChange}/>\n        <label htmlFor=\"switch\"className=\"mode__slider\"></label>\n        <p className=\"mode__option\">Todo</p>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","// list component for showing jobs\nimport \".//Jobs.scss\";\n\nconst Jobs = (props) => {\n  return (\n    <section className=\"list\">\n      <h3 className=\"list__title\">{props.title}</h3>\n      <ul className=\"list__container\">\n        {props.queue === true ? props\n          .queues\n          .map((item, index) => {\n            return (\n              <li key={index} className=\"list__item\">\n                <div>\n                  <p>{item.job}</p>\n                  <p className=\"list__date\" >{item.date ? item.date.join(\"/\") : null}</p>\n                </div>\n                <button onClick={props.removeHandler} className=\"list__remove\">Done</button>\n              </li>\n            );\n          }) : \n            props.queues.map((item, index) => {\n              return (\n                <li key={index} className=\"list__item\">\n                  <p>{item}</p>\n                  <button onClick={props.removeHandler} className=\"list__remove\">Done</button>\n                </li>\n              );\n          })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Jobs;\n","// cusotomizable input component\n\nconst TextField = (props) => {\n  return (\n    <label>\n      {props.label}\n      <input \n        min={props.min}\n        max={props.max}\n        data-key={props.inputKey}\n        className={props.clsName}\n        type={props.type}\n        value={props.value}\n        onChange={props.handleChange}/>\n      </label>\n  );\n};\n\nexport default TextField;\n","import TextField from \"./../TextField/TextField.js\";\nimport \"./Dashboard.scss\";\n\n\nconst Dashboard = (props) => {\n  let date = props.value.date;\n\n  return (\n    <form onSubmit={props.handleSubmit} className=\"dashboard\">\n      <div className=\"dashboard__task\">\n        <p className=\"dashboard__desc\" >Type your task: </p>\n        <TextField \n          inputKey=\"job\"\n          type=\"test\"\n          value={props.queue ? props.value.job : props.value}\n          handleChange={props.handleChange}/>\n      </div>\n    {props.queue ?\n      <div className=\"dashboard__date\">\n        <p className=\"dashboard__desc\">Type date for task</p>\n        <TextField\n          value={date[0]} \n          label=\"Yaer\"\n          inputKey=\"year\"\n          handleChange={props.handleChange}\n          type=\"number\"/>\n        <TextField\n          value={date[1]} \n          label=\"Month\"\n          min={0}\n          max={12}\n          inputKey=\"month\"\n          handleChange={props.handleChange}\n          type=\"number\"/>\n        <TextField\n          value={date[2]} \n          label=\"Day\"\n          inputKey=\"day\"\n          min={0}\n          max={31}\n          handleChange={props.handleChange}\n          type=\"number\"/>\n      </div>\n      : null}\n      <button type=\"submit\" className=\"dashboard__submit\">Add Job</button>\n    </form>\n  );\n};\n\nexport default Dashboard;\n","const stableSort = (arr, n) => {\n  for(let i = 1, len = arr.length; i < len; i++) {\n    let key = arr[i];\n    let j = i - 1;\n\n    let item = arr[j];\n\n    while(j >= 0 && item.date[n] > key.date[n]) {\n      arr[j + 1] = arr[j];\n      j--;\n      item = arr[j];\n    }   \n\n    arr[j + 1] = key;\n  }\n};\n\nconst radix = (arr) => {\n  let result = [...arr],\n    eg = arr[0];\n\n  for(let i = eg.date.length - 1; i >= 0; i--) {\n    stableSort(result, i); \n  }\n  \n  return result\n};\n\nexport { radix };\n","import { useState } from \"react\";\n\nimport Jobs from \"./../Jobs/Jobs\";\nimport Dashboard from \"./../Dashboard/Dashboard.js\";\n\nimport { radix } from \"./sort.js\";\n\nlet list = [\n  {date: [0, 0, 0], job: \"Please type and add your tasks\"},\n];\n\nconst Queue = (props) => {\n  const [queues, setQueues] = useState(list);\n  const [current, setCurrent] = useState({date: [1400, 1, 1], job: \"\"});\n\n  // event listener for controling dashboard inputs\n  const handleChange = (e) => {\n    let newState = Object.assign({}, current);\n\n    switch(e.target.dataset.key) {\n      case \"job\": \n        newState.job = e.target.value;\n        break;\n      case \"day\":\n        newState.date[2] = e.target.value;\n        break;\n      case \"month\":\n        newState.date[1] = e.target.value;\n        break;\n      case \"year\":\n        newState.date[0] = e.target.value;\n        break;\n      default:\n        console.log(\"oops! something went wrong\");\n        break;\n    }\n\n    setCurrent(newState);\n  }\n\n  // event listener for adding new queues\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(current.job === \"\") return 0;\n    let newState = [...queues, current];\n\n    newState = radix(newState);\n\n    setQueues(newState)\n    setCurrent({date: [1400, 1, 1], job: \"\"});\n  }\n  \n  // event listener for removing jobs\n  const removeHandler = (e) => {\n    let job = e.target.parentElement.firstChild.firstChild.textContent,\n      newState = [...queues],\n      idx = queues.findIndex(item => item.job === job);\n\n    newState = newState.slice(0, idx).concat(newState.slice(idx + 1));\n\n    if(newState.length !== 0) {\n      newState = radix(newState);\n    }\n\n    setQueues(newState);\n  }\n\n  return (\n    <main className=\"main\">\n      <Jobs \n        queue={props.queue}\n        removeHandler={removeHandler}\n        queues={queues.length === 0 ? [{job: \"Please add your queues\", date: []}] : queues} />\n      <Dashboard\n        queue={props.queue}\n        value={current}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}/>\n    </main>\n  );\n};\n\nexport default Queue;\n","import { useState } from \"react\";\n\nimport Jobs from \"./../Jobs/Jobs.js\";\nimport Dashborad from \"./../Dashboard/Dashboard.js\";\n\n\nconst defaultCase = [\"please type and add your taks\"];\n\nconst Todo = (props) => {\n  const [queues, setQueues] = useState(defaultCase);\n  const [current, setCurrent] = useState(\"\");\n\n  const removeHandler = (e) => {\n    let job = e.target.parentNode.firstChild.textContent,\n      newState = [...queues],\n      idx = newState.findIndex(item => item ===  job);\n\n    newState = newState.slice(0, idx).concat(newState.slice(idx + 1));\n\n    setQueues(newState);\n  }\n\n  const handleChange = (e) => {\n    let newState = e.target.value;\n    setCurrent(newState);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let newState = queues === defaultCase ? [current] : [...queues, current];\n\n    setCurrent(\"\");\n    setQueues(newState);\n  }\n\n  return (\n    <section className=\"main\">\n      <Jobs\n        removeHandler={removeHandler}\n        queue={props.queue}\n        queues={queues.length === 0 ? defaultCase : queues} />\n      <Dashborad\n        queue={props.queue}\n        value={current}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}/>\n    </section>\n  );\n};\n\nexport default Todo;\n","import { useState } from \"react\";\n\nimport Header from \"./Header/Header.js\";\nimport Queue from \"./Queue/Queue.js\";\nimport Todo from \"./Todo/Todo.js\";\n\nconst App = () => {\n  const [queue, setQueue] = useState(true);\n  \n  const handelValue = (e) => {\n    setQueue(!e.target.checked);\n  }\n\n  return (\n    <section>\n      <Header value={queue} handleChange={handelValue}/>\n      {queue ? <Queue queue={queue}/> : <Todo queue={queue}/>}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}